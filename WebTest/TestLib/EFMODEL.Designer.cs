//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace WebTest.TestLib
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class SqlSugarTestEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“SqlSugarTestEntities”部分中的连接字符串初始化新 SqlSugarTestEntities 对象。
        /// </summary>
        public SqlSugarTestEntities() : base("name=SqlSugarTestEntities", "SqlSugarTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 SqlSugarTestEntities 对象。
        /// </summary>
        public SqlSugarTestEntities(string connectionString) : base(connectionString, "SqlSugarTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 SqlSugarTestEntities 对象。
        /// </summary>
        public SqlSugarTestEntities(EntityConnection connection) : base(connection, "SqlSugarTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<School> School
        {
            get
            {
                if ((_School == null))
                {
                    _School = base.CreateObjectSet<School>("School");
                }
                return _School;
            }
        }
        private ObjectSet<School> _School;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Student> Student
        {
            get
            {
                if ((_Student == null))
                {
                    _Student = base.CreateObjectSet<Student>("Student");
                }
                return _Student;
            }
        }
        private ObjectSet<Student> _Student;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Subject> Subject
        {
            get
            {
                if ((_Subject == null))
                {
                    _Subject = base.CreateObjectSet<Subject>("Subject");
                }
                return _Subject;
            }
        }
        private ObjectSet<Subject> _Subject;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 School EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSchool(School school)
        {
            base.AddObject("School", school);
        }
    
        /// <summary>
        /// 用于向 Student EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToStudent(Student student)
        {
            base.AddObject("Student", student);
        }
    
        /// <summary>
        /// 用于向 Subject EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSubject(Subject subject)
        {
            base.AddObject("Subject", subject);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SqlSugarTestModel", Name="School")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class School : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 School 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static School CreateSchool(global::System.Int32 id)
        {
            School school = new School();
            school.id = id;
            return school;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SqlSugarTestModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Student 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static Student CreateStudent(global::System.Int32 id)
        {
            Student student = new Student();
            student.id = id;
            return student;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sch_id
        {
            get
            {
                return _sch_id;
            }
            set
            {
                Onsch_idChanging(value);
                ReportPropertyChanging("sch_id");
                _sch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sch_id");
                Onsch_idChanged();
            }
        }
        private Nullable<global::System.Int32> _sch_id;
        partial void Onsch_idChanging(Nullable<global::System.Int32> value);
        partial void Onsch_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sex
        {
            get
            {
                return _sex;
            }
            set
            {
                OnsexChanging(value);
                ReportPropertyChanging("sex");
                _sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sex");
                OnsexChanged();
            }
        }
        private global::System.String _sex;
        partial void OnsexChanging(global::System.String value);
        partial void OnsexChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SqlSugarTestModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Subject 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        public static Subject CreateSubject(global::System.Int32 id)
        {
            Subject subject = new Subject();
            subject.id = id;
            return subject;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sid
        {
            get
            {
                return _sid;
            }
            set
            {
                OnsidChanging(value);
                ReportPropertyChanging("sid");
                _sid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sid");
                OnsidChanged();
            }
        }
        private Nullable<global::System.Int32> _sid;
        partial void OnsidChanging(Nullable<global::System.Int32> value);
        partial void OnsidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
    }

    #endregion
    
}
