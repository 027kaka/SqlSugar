<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SqlSugar" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Web" #>
<#@ assembly name="$(SolutionDir)\WebTest\App_Lib\SqlSugar.dll" #>
<#@ assembly name="$(SolutionDir)\WebTest\App_Lib\SyntacticSugar.dll" #>
<#@ include file="$(ProjectDir)\T4\SugarTemplateCore.ttinclude"  #>

<# 
    /* 用法实体类的类库格式必须是 xxx.Entities 格式，当然你也可以自已改SugarTemplateCore.ttinclude里面的逻辑,SugarTemplate.xml设置连接字符串 */


    //当前项目目录
    string projectDir = Host.ResolveAssemblyReference("$(ProjectDir)");

	//解决方案目录
    string solutionDir = Host.ResolveAssemblyReference("$(SolutionDir)");

	 //设置 Mapping Table 如果没这方面需求可以传NULL
	 List<KeyValue> mappingTableList = new List<KeyValue>()
        {
            new KeyValue(){ Key="FormAttr", Value="Flow_FormAttr"},
            new KeyValue(){ Key="Student3", Value="Student"}
        };

	GeneratingEntities ge=new GeneratingEntities(projectDir,solutionDir,mappingTableList);
	ge.CreateClass();
#>